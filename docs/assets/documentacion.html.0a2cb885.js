import{_ as e,o as a,c as i,d as o}from"./app.d3f198fe.js";var r="/selenium-framework-doc-niubiz/images/documentacion/framework-tecnico.png",s="/selenium-framework-doc-niubiz/images/documentacion/mantenimiento_script.png",t="/selenium-framework-doc-niubiz/images/documentacion/gobierno1.png",n="/selenium-framework-doc-niubiz/images/documentacion/gobierno2.png",l="/selenium-framework-doc-niubiz/images/documentacion/estrategias.png",d="/selenium-framework-doc-niubiz/images/documentacion/dinamica_trabajo.png";const c={},u=o('<h1 id="documentacion" tabindex="-1"><a class="header-anchor" href="#documentacion" aria-hidden="true">#</a> Documentaci\xF3n</h1><h2 id="terminos-y-definiciones" tabindex="-1"><a class="header-anchor" href="#terminos-y-definiciones" aria-hidden="true">#</a> T\xE9rminos y Definiciones</h2><ol><li><strong>AAPg:</strong> Arquitectura de Automatizaci\xF3n de Prueba Gen\xE9rica</li><li><strong>SAP:</strong> Sistema de Automatizaci\xF3n de Pruebas</li><li><strong>SSP:</strong> Sistema Sujeto a Prueba (PAGO WEB).</li><li><strong>GUI:</strong> Interfaz Gr\xE1fica de Usuario</li><li><strong>Archivo \u201C.feature\u201D:</strong> Archivo que contiene el paso a paso del escenario de prueba. La descripci\xF3n del paso a paso se desarrolla haciendo el uso de la herramienta Cucumber.</li><li><strong>Escenario de Prueba:</strong> Para los casos de prueba del aplicativo Pago Web / Pago App / Tokenizaci\xF3n, cada escenario de prueba dentro del feature representa a un caso de prueba.</li><li><strong>Aplicativo Conocido:</strong> Aplicativo el cual tiene algunos casos de prueba ya automatizados.</li><li><strong>Aplicativo Nuevo:</strong> Aplicativo el cual no tiene casos de prueba automatizados.</li></ol><h2 id="framework-de-automatizacion" tabindex="-1"><a class="header-anchor" href="#framework-de-automatizacion" aria-hidden="true">#</a> Framework de Automatizaci\xF3n</h2><p>El framework propuesto para Niubiz se desarrolla para todo el ciclo de automatizaci\xF3n de pruebas funcionales. Este framework contempla actualmente (5) cinco de los (7) siete componentes, dejando (2) dos para mejora continua:</p><p><img src="'+r+'" alt="Framework de Automatizaci\xF3n"></p><h3 id="gobierno-de-ti" tabindex="-1"><a class="header-anchor" href="#gobierno-de-ti" aria-hidden="true">#</a> Gobierno de TI</h3><p>El framework define la participaci\xF3n de la automatizaci\xF3n de pruebas en cada una de las tres capas de gobierno de TI en las organizaciones: (a) A Nivel Estrat\xE9gico, (b) De Gobierno, y (c) Operativo.</p><ol><li>Nivel Estrat\xE9gico. La automatizaci\xF3n de pruebas de software es una estrategia operativa alineada a objetivos estrat\xE9gicos de la gerencia de TI. El fin de este objetivo estrat\xE9gico es la reducci\xF3n de costos, asimismo, optimizar el modelo de calidad de software y validaci\xF3n de los sistemas.</li><li>Nivel de Gobierno. La automatizaci\xF3n de prueba se encuentra bajo el gobierno de una estructura de gesti\xF3n propuesta por NIUBIZ.</li><li>Nivel Operativo. Se cuenta con una (AAP) Arquitectura de Automatizaci\xF3n de Pruebas est\xE1ndar definida.</li></ol><h3 id="roles-de-automatizacion" tabindex="-1"><a class="header-anchor" href="#roles-de-automatizacion" aria-hidden="true">#</a> Roles de Automatizaci\xF3n</h3><p>El framework de automatizaci\xF3n plantea 3 roles que se manejan de forma colaborativa:</p><ul><li>Jefe de servicio. Es el encargado de realizar el rol de facilitador as\xED mismo de monitorear el desarrollo eficiente de los proyectos, pilotos o servicios de automatizaci\xF3n.</li><li>L\xEDder de automatizaci\xF3n. Es el facilitador t\xE9cnico y de estrategia, quien tendr\xE1 a cargo la centralizaci\xF3n de las pr\xE1cticas de automatizaci\xF3n de soporte y de proyectos waterfall y/o \xE1giles, para as\xED llevar una adecuada administraci\xF3n de los mismos; lo que permitir\xE1 identificar puntos de mejora continua, tanto en los procesos, as\xED como tambi\xE9n de impartir entrenamiento y gu\xEDa a los miembros del equipo.</li><li>Automatizador. Encargado de realizar las actividades operativas tales como administraci\xF3n y soporte de la infraestructura, desarrollo, mantenimiento y ejecuci\xF3n de los scripts de automatizaci\xF3n, entre otros.</li><li>Analista QA. Encargado de realizar las transferencias funcionales para futuros desarrollos en automatizaci\xF3n, adem\xE1s de ejecutar los scripts automatizados.</li></ul><h3 id="cobertura-de-automatizacion" tabindex="-1"><a class="header-anchor" href="#cobertura-de-automatizacion" aria-hidden="true">#</a> Cobertura de Automatizaci\xF3n</h3><p>El framework t\xE9cnico en combinaci\xF3n con diferentes herramientas de automatizaci\xF3n de pruebas, permite la cobertura de pruebas en aplicativos <strong>SERVICIOS / WEB:</strong></p><table><thead><tr><th></th><th>Herramientas definidas</th></tr></thead><tbody><tr><td>Aplicaciones Web</td><td>Selenium / WebDriver / JAVA</td></tr><tr><td>Servicios</td><td>Selenium / HttpClient / Java</td></tr></tbody></table><h3 id="framework-tecnico" tabindex="-1"><a class="header-anchor" href="#framework-tecnico" aria-hidden="true">#</a> Framework T\xE9cnico</h3><p>El proceso de pruebas de automatizaci\xF3n se basa en el marco t\xE9cnico de trabajo h\xEDbrido para los proyectos en cascada, combinando hasta cuatro patrones de automatizaci\xF3n, seg\xFAn aplique en cada caso: (1) Modular, (2) Liber\xEDas comunes, (3) Datos de Pruebas, y (4) Palabras claves. El beneficio de esta configuraci\xF3n es que aprovecha las funcionalidades de todos los tipos de marcos asociados. As\xED mismo, para proyectos \xE1giles se integra un patr\xF3n adicional, BDD, en el cual se contemplan los (0) features (escenarios de prueba) como punto de partida.</p><p>Este framework permite los siguientes beneficios:</p><ul><li>Mantenimiento eficiente debido al dise\xF1o modular y librer\xEDas de funciones comunes.</li><li>Escalabilidad, presenta desacoplamiento, es f\xE1cil el adicionar componentes para mayor cobertura de los casos de pruebas automatizados.</li><li>Flexibilidad, permite ejecutar diferentes casos de pruebas a partir de diferentes datos de entrada.</li><li>Usabilidad, a trav\xE9s de palabras podemos lograr comportamientos distintos sin tener que ingresar al c\xF3digo.</li></ul><p>Adicionalmente, para el caso de proyectos \xE1giles se a\xF1adir\xE1 BDD, lo caul permite sumar a los beneficios lo siguiente:</p><ul><li>F\xE1cil entendimiento, permite incluir en la automatizaci\xF3n el escenario de manera escrita (lenguaje Gherkin) lo que permite que cualquier rol entienda el comportamiento que tendr\xE1 el escenario automatizado al ejecutarse.</li></ul><h3 id="capa-de-soporte-de-ti" tabindex="-1"><a class="header-anchor" href="#capa-de-soporte-de-ti" aria-hidden="true">#</a> Capa de Soporte de TI</h3><p>El framework plantea los siguientes servicios como soporte de TI base:</p><ul><li>Las herramientas correspondientes a la arquitectura de la automatizaci\xF3n reciben soporte t\xE9cnico y mantenimiento oportuno.</li><li>Gesti\xF3n de pruebas automatizadas lleva un control del inventario de los casos de pruebas automatizados y el inventario de las evidencias generadas.</li><li>Los reporte e indicadores que son generados al finalizar las ejecuciones, permiten llevar seguimiento del desarrollo y mantenimiento de scripts.</li></ul><h3 id="administracion-de-scripts" tabindex="-1"><a class="header-anchor" href="#administracion-de-scripts" aria-hidden="true">#</a> Administraci\xF3n de Scripts</h3><p>El framework brinda soporte de administraci\xF3n t\xE9cnico de los scripts de automatizaci\xF3n con el Control de repositorio y Mantenimiento de scripts.</p><ol><li><p>Para asegurar un mantenimiento correcto, el FW T\xE9cnico debe considerar lo siguiente:</p><ul><li>Debe ser MODULAR</li><li>Debe ser ESCALABLE</li><li>Debe ser COMPRENSIBLE (Documentado)</li><li>Debe ser CONFIABLE</li><li>Debe ser VERIFICABLE</li></ul></li><li><p>Tipos de Mantenimiento:</p><ul><li>Preventivo: se realizan cambios para mejorar la operaci\xF3n.</li><li>Correctivo: cambios para corregir fallos en el Sistema de Automatizaci\xF3n de Pruebas ante alg\xFAn cambio del SSP.</li><li>Perfectivo: se establecen cambios para optimizar.</li><li>Adaptativo: se hacen cambios para admitir nuevas aplicaciones</li></ul></li></ol><p><img src="'+s+'" alt="Mantenimiento de Script"></p><ol><li>Un mantenimiento correctivo se detecta al ejecutar un script y este falle por causas de alg\xFAn cambio en el SSP.</li><li>Se realiza una inspecci\xF3n de c\xF3digo para detectar el m\xF3dulo / clase / objeto(s) afectado(s).</li><li>Se prepara y env\xEDa la estimaci\xF3n con el esfuerzo por realizar el mantenimiento.</li><li>El cliente aprueba el esfuerzo y se procede con los cambios.</li><li>El equipo de automatizaci\xF3n realiza los cambios hasta tener una nueva versi\xF3n que ejecute sin fallos.</li><li>Se actualiza el c\xF3digo en el repositorio centralizado.</li><li>Se realiza una prueba para confirmar los cambios desde el repositorio central.</li><li>Se dispone los scripts modificados para su ejecuci\xF3n.</li></ol><h3 id="entrega-continua" tabindex="-1"><a class="header-anchor" href="#entrega-continua" aria-hidden="true">#</a> Entrega Continua</h3><p>El framework est\xE1 preparado para integrarse al proceso de entrega continua que posea NIUBIZ, tanto para la Ejecuci\xF3n de automatizada y Regresi\xF3n continua.</p><h2 id="gobierno-de-ti-1" tabindex="-1"><a class="header-anchor" href="#gobierno-de-ti-1" aria-hidden="true">#</a> Gobierno de TI</h2><p>La estrategia de automatizaci\xF3n que plantea el gobierno de TI es la siguiente:</p><p><img src="'+t+'" alt="Gobierno TIs"></p><h3 id="_1-estrategia" tabindex="-1"><a class="header-anchor" href="#_1-estrategia" aria-hidden="true">#</a> 1. Estrategia</h3><p>Los requerimientos de automatizaci\xF3n ser\xE1n identificados por NIUBIZ (Equipo de Calidad). Los Analistas de QA transfieren informaci\xF3n acerca de los casos de prueba o flujos que se proponen automatizar. Esta informaci\xF3n pasa por un an\xE1lisis de factibilidad, el cual, ser\xE1 descrito m\xE1s adelante. El an\xE1lisis de factibilidad asigna una clasificaci\xF3n y un puntaje a los flujos o casos de prueba, permitiendo determinar los flujos \xF3ptimos a ser automatizados.<br> Cuando se tenga los flujos ya identificados se realiza una Estimaci\xF3n Alto nivel, la cual permite la elaboraci\xF3n del Plan de Automatizaci\xF3n.</p><p><img src="'+n+'" alt="Estrategias"></p><p>Cuando el plan de automatizaci\xF3n es aprobado por NIUBIZ, se da inicio a la etapa de desarrollo.</p><p>An\xE1lisis de Factibilidad: Las actividades a realizar dentro de esta etapa son las siguientes:</p><ol><li><strong>Actividad: An\xE1lisis Nivel 1</strong></li></ol><p><strong>Objetivo</strong></p><ul><li>Identificar los candidatos que sean viables funcionalmente/t\xE9cnicamente.</li><li>Asignar un nivel de complejidad</li><li>Asignar puntuaci\xF3n a los candidatos viables en base a los siguientes criterios: Valor de Caso de Prueba, Riesgo de Negocio, Costro Eficiencia e Historial.</li></ul><p><strong>Herramientas usadas</strong></p><ul><li>Matriz de An\xE1lisis Factibilidad (ANEXO10.1 \u2013 HOJA An\xE1lisis Nivel 1)</li><li>Reuniones con los Analistas QA asignados / personas que tengan el know-how del SSP a ser automatizado.</li></ul><ol start="2"><li><strong>Actividad: An\xE1lisis Nivel 2</strong></li></ol><p><strong>Objetivo:</strong></p><ul><li>Asignar puntuaci\xF3n a los candidatos viables, en base a los siguientes criterios: Valor de Caso de Prueba, Riesgo de Negocio, Costo-Eficiencia e Historial.</li></ul><p><strong>Herramientas usadas:</strong></p><ul><li>Matriz de An\xE1lisis Factibilidad (ANEXO 10.1 \u2013 HOJA An\xE1lisis Nivel 2)</li><li>Reuniones con los Analistas QA asignados. Al finalizar los an\xE1lisis de Nivel 1 y Nivel 2, se procede a realizar la estimaci\xF3n (ANEXO: Plantilla - Matriz de Estimaci\xF3n Alto Nivel)</li></ul><h3 id="_2-desarrollo" tabindex="-1"><a class="header-anchor" href="#_2-desarrollo" aria-hidden="true">#</a> 2. Desarrollo</h3><p>Es una etapa c\xEDclica que consiste en desarrollo y pruebas. Se realiza el desarrollo de los flujos identificadas y posteriormente se realiza las pruebas de los mismos. Cuando los scripts ya se encuentren verificados, se realiza el despliegue en el repositorio. Finalmente, los scripts estar\xE1n disponibles para las ejecuciones programadas o a demanda.</p><h3 id="_3-mantenimiento" tabindex="-1"><a class="header-anchor" href="#_3-mantenimiento" aria-hidden="true">#</a> 3. Mantenimiento</h3><p>Los scripts que necesiten un mantenimiento, ser\xE1n identificados por NIUBIZ o por el equipo de TSOFT. Luego se har\xE1 de conocimiento al cliente para su aprobaci\xF3n y priorizaci\xF3n dentro del backlog del equipo.</p><h3 id="_4-soporte-y-administracion" tabindex="-1"><a class="header-anchor" href="#_4-soporte-y-administracion" aria-hidden="true">#</a> 4. Soporte y Administraci\xF3n</h3><p>Durante todo el proceso de atenci\xF3n de automatizaci\xF3n se cuenta con el soporte por el equipo de TSOFT.</p><h2 id="administracion-de-script" tabindex="-1"><a class="header-anchor" href="#administracion-de-script" aria-hidden="true">#</a> Administraci\xF3n de Script</h2><h3 id="acerca-del-repositorio" tabindex="-1"><a class="header-anchor" href="#acerca-del-repositorio" aria-hidden="true">#</a> Acerca del repositorio</h3><h4 id="datos-del-repositorio" tabindex="-1"><a class="header-anchor" href="#datos-del-repositorio" aria-hidden="true">#</a> Datos del repositorio</h4><p>Nombre Repositorio: framework-selenium</p><p>Acceso al repositorio: https://bitbucket.org/VisaNet_TI/framework-selenium/src/master/</p><h4 id="caracteristicas-del-repositorio" tabindex="-1"><a class="header-anchor" href="#caracteristicas-del-repositorio" aria-hidden="true">#</a> Caracter\xEDsticas del repositorio</h4><p>Existe solo un repositorio en donde almacena un proyecto java con la estructura maven. Este proyecto incluye escenarios para los diferentes aplicativos de Niubiz.</p><ol><li><strong>master:</strong> Branch contenedor de las versiones finales de los flujos automatizados.</li><li><strong>qa:</strong> Branch contenedor de las versiones verificadas por el equipo de calidad.</li><li><strong>developer:</strong> Branch contenedor de las versiones desarrollados por el equipo de automatizaci\xF3n.</li></ol><p><img src="'+l+'" alt="Estrategias de Ramas"></p><h3 id="dinamica-de-trabajo" tabindex="-1"><a class="header-anchor" href="#dinamica-de-trabajo" aria-hidden="true">#</a> Din\xE1mica de trabajo</h3><p>Para el adecuado control del repositorio y el mantenimiento de los scripts, se ha propuesto la siguiente din\xE1mica de trabajo.</p><ol><li>Al llegar un nuevo proyecto, solicitud a demanda de automatizaci\xF3n de prueba de un aplicativo o mantenimiento de scripts, se deber\xE1 crear una rama con el nombre del proyecto o aplicativo.</li><li>Los automatizadores descargan la versi\xF3n del master a su local.</li><li>Los automatizadores desarrollan los nuevos scripts en la nueva rama developer. Realizan las pruebas correspondientes y realizan un push dentro de la misma rama.</li><li>Se realiza una revisi\xF3n de pares al c\xF3digo que se quiere subir a la rama qa.</li><li>Se aprueba el desarrollo se sube el c\xF3digo a la rama qa.</li><li>Se aprueba el pull request para que la rama master tenga la versi\xF3n actualizada.</li></ol><p><img src="'+d+'" alt="Dinamica de Trabajo"></p>',68),p=[u];function m(b,h){return a(),i("div",null,p)}var f=e(c,[["render",m],["__file","documentacion.html.vue"]]);export{f as default};
